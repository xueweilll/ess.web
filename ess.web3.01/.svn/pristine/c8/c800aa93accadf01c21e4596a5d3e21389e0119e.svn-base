<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
		xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/jdbc
		http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<!-- DataSource -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://192.168.1.44:3306/zndp?characterEncoding=UTF-8" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	<!-- SessionFactory -->
	<!-- <bean id="hibernateInterceptor" class="com.qf.Interceptor.HibernateInterceptor" /> -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource" p:configLocation="classpath:hibernate.cfg.xml"/>
		<!-- p:entityInterceptor-ref="hibernateInterceptor" -->
	<!-- TransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />
	<!-- Spring Advice -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"></tx:method>
			<tx:method name="*"></tx:method>
		</tx:attributes>
	</tx:advice>
	<!-- Spring Aop Config -->
	<aop:config>
		<aop:pointcut id="pointcut"
			expression="
			execution(* com.service.impl.*Impl.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
	</aop:config>
	
	<context:component-scan base-package="com.dao.impl"/>
	
	<context:component-scan base-package="com.protocol"/>
	
	<context:component-scan base-package="com.service.impl"/>
	
	<context:component-scan base-package="com.common.contral"/>
	
	<context:component-scan base-package="com.common.Interceptor"/>
	
	<context:component-scan base-package="com.unit"/>
	
	<context:component-scan base-package="com.socket"/>
	
	<!-- <bean id="quartzJob" class="com.test.QuartzJob"></bean> -->
	<!-- 定义调用对象和调用对象的方法 -->
<!-- 	<bean id="jobtask"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		调用的类
		<property name="targetObject">
			<ref bean="quartzJob" />
		</property>
		调用类中的方法
		<property name="targetMethod">
			<value>work</value>
		</property>
	</bean> -->
	<!-- 定义触发时间 -->
	<!-- <bean id="doTime" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="jobtask" />
		</property>
		cron表达式
		<property name="cronExpression">
			<value>0 0/1 * * * ?</value>
		</property>
	</bean> -->
	<!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序 -->
<!-- 	<bean id="startQuertz" lazy-init="false" autowire="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="doTime" />
			</list>
		</property>
	</bean> -->
	
</beans>
